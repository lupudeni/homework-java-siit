package com.homework.week10.electronicvote;

import com.homework.util.ActionStatus;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;

import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

/**
 * The names have been randomly generated by: https://www.behindthename.com
 * CNP and ID number generated by random.org; CNP- 13 characters, id number- 6 characters
 **/
public class ElectronicVoteService {

    private String citizenText;
    private String candidatesText;
    private Map<String, Integer> candidateDataBase;
    private Map<String, Citizen> citizenDataBase;


    public ElectronicVoteService(String citizenText, String candidatesText) throws IOException {
        this.citizenText = citizenText;
        this.candidatesText = candidatesText;
        populateCitizenDataBase();
        populateCandidateDataBase();
    }

    private void populateCandidateDataBase() throws IOException {
        Path candidatePath = Paths.get(candidatesText);
        List<String> candidateNames = Files.readAllLines(candidatePath);
        candidateDataBase = new HashMap<>();
        candidateNames.forEach(candidate -> candidateDataBase.put(candidate, 0));
    }

    private void populateCitizenDataBase() throws IOException {
        Path citizenPath = Paths.get(citizenText);

        citizenDataBase = Files.lines(citizenPath)
                .map(line -> line.split("_"))
                .map(words -> new Citizen(words[0], words[1], words[2], new IDCard(words[3], words[4], words[5])))
                .collect(Collectors.toMap(Citizen::getCNP, person -> person));
    }

    public String vote(String citizenCNP, String candidateName) {
        Citizen citizen = citizenDataBase.get(citizenCNP);
        if (citizen == null || citizen.isVoted() || !candidateDataBase.containsKey(candidateName)) {
            return ActionStatus.FAIL;
        }
        citizen.setVoted(true);
        giveVoteToCandidate(candidateName);
        return ActionStatus.SUCCESS;
    }

    private void giveVoteToCandidate(String candidateName) {
        candidateDataBase.compute(candidateName, (name, votes) -> votes == null ? 0 : votes + 1);
    }

    public Map<String, Integer> getPoll() {
        return new HashMap<>(candidateDataBase);
    }
}
